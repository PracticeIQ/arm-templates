{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "datacenterName": {
      "defaultValue": null,
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "metadata": {
        "description": "The 3-char datacenter string that prefixes the resource group."
      }
    },
    "karbonBEPool": {
      "type": "array",
      "metadata": {
        "description": "The fqdns of the VMs in the Karbon Pool"
      }
    },
    "clientBEPool": {
      "type": "array",
      "metadata": {
        "description": "The fqdns of the VMs in the Client Pool"
      }
    },
    "hostName": {
      "type": "string",
      "metadata": {
        "description": "The hostname for the karbon app"
      }
    },
    "clientHostName": {
      "type": "string",
      "metadata": {
        "description": "The hostname for the client app"
      }
    },
    "domainName": {
      "type": "string",
      "metadata": {
        "description": "The public domain name for the hosts, must match the cert."
      }
    },
    "sslData": {
      "type": "string",
      "metadata": {
        "description": "The Base64 encoded *.pkx file. Only need this once, when the Gateway is first deployed."
      }
    },
    "sslPassword": {
      "type": "string",
      "metadata": {
        "description": "The SSL password that goes with the pkx file. You only need this once, when the Gateway is first deployed."
      }
    }
  },
  "variables": {
    "vnetName": "[concat(parameters('datacenterName'), '-datacenter-vnet')]",
    "appGatewayName": "[concat(parameters('datacenterName'), '-datacenter-gtw')]",
    "appGatewayIPName": "[concat(parameters('datacenterName'), '-gateway-pip')]",
    "karbonUrl": "[concat(parameters('hostName'), '.', parameters('domainName'))]",
    "clientUrl": "[concat(parameters('clientHostName'), '.', parameters('domainName'))]"
  },
  "resources": [
    {
      "comments": "Allocate a Public IP for the Gateway, this is the one that will need DNS entries, so output to the script",
      "name": "[variables('appGatewayIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments": "The Application Gateway presents the only public entry points to the datacenter.",
      "type": "Microsoft.Network/applicationGateways",
      "name": "[variables('appGatewayName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard_Medium",
          "tier": "Standard",
          "capacity": 1
        },
        "sslPolicy": {
          "disabledSslProtocols": [
            "TLSv1_0", "TLSv1_1"
          ]
        },
        "gatewayIPConfigurations": [
          {
            "name": "gtw-ip-config",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'Public')]"
              }
            }
          }
        ],
        "sslCertificates": [
          {
            "name": "star-karbonhq-com",
            "properties": {
              "data": "[parameters('sslData')]",
              "password": "[parameters('sslPassword')]"
            }
          }
        ],
        "authenticationCertificates": [],
        "frontendIPConfigurations": [
          {
            "name": "gtw-frontend-ip",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGatewayIPName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "gtw-frontend-port",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "gtw-karbon-be-pool",
            "properties": {
              "backendAddresses": "[parameters('karbonBEPool')]"
            }
          },
          {
            "name": "gtw-client-be-pool",
            "properties": {
              "backendAddresses": "[parameters('clientBEPool')]"
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "gtw-client-be-http-settings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "probeEnabled": true,
              "requestTimeout": 20,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', variables('appGatewayName'), 'gtw-probe-site-client')]"
              }
            }
          },
          {
            "name": "gtw-karbon-be-http-settings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "probeEnabled": true,
              "requestTimeout": 20,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', variables('appGatewayName'), 'gtw-probe-site-karbon')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "gtw-client-http-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), 'gtw-frontend-ip')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), 'gtw-frontend-port')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('appGatewayName'), 'star-karbonhq-com')]"
              },
              "hostName": "[variables('clientUrl')]",
              "requireServerNameIndication": true
            }
          },
          {
            "name": "gtw-karbon-http-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), 'gtw-frontend-ip')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), 'gtw-frontend-port')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('appGatewayName'), 'star-karbonhq-com')]"
              },
              "hostName": "[variables('karbonUrl')]",
              "requireServerNameIndication": true
            }
          }
        ],

        "requestRoutingRules": [
          {
            "name": "gtw-client-rules",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGatewayName'), 'gtw-client-http-listener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), 'gtw-client-be-pool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), 'gtw-client-be-http-settings')]"
              }
            }
          },
          {
            "name": "gtw-karbon-rules",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGatewayName'), 'gtw-karbon-http-listener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), 'gtw-karbon-be-pool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), 'gtw-karbon-be-http-settings')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "gtw-probe-site-client",
            "properties": {
              "protocol": "Http",
              "host": "[parameters('clientHostName')]",
              "path": "/index.html",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": false,
              "minServers": 0,
              "match": {}
            }
          },
          {
            "name": "gtw-probe-site-karbon",
            "properties": {
              "protocol": "Http",
              "host": "[parameters('hostName')]",
              "path": "/index.html",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": false,
              "minServers": 0,
              "match": {}
            }
          }
        ],
        "redirectConfigurations": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGatewayIpName'))]"
      ]
    }
  ],
  "outputs": {}
}