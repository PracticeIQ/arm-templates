{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "datacenterName": {
      "defaultValue": null,
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "metadata": {
        "description": "The 3-char datacenter string that prefixes the resource group."
      }
    },
    "karbonBEPool": {
      "type": "array",
      "metadata": {
        "description": "The fqdns of the VMs in the Karbon Pool"
      }
    },
    "clientBEPool": {
      "type": "array",
      "metadata": {
        "description": "The fqdns of the VMs in the Client Pool"
      }
    },
    "urlHostName": {
      "type": "string",
      "metadata": {
        "description": "The hostname for the karbon app"
      }
    }
  },
  "variables": {
    "vnetName": "[concat(parameters('datacenterName'), '-datacenter-vnet')]",
    "appGatewayName": "[concat(parameters('datacenterName'), '-datacenter-gtw')]",
    "appGatewayIPName": "[concat(parameters('datacenterName'), '-gateway-pip')]",
    "clientAppHostName": "[concat(parameters('urlHostName'), 'client')]"
  },
  "resources": [
    {
      "comments": "Allocate a Public IP for the Gateway, this is the one that will need DNS entries, so output to the script",
      "name": "[variables('appGatewayIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2016-09-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments": "The Application Gateway presents the only public entry points to the datacenter.",
      "type": "Microsoft.Network/applicationGateways",
      "name": "[variables('appGatewayName')]",
      "apiVersion": "2017-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard_Medium",
          "tier": "Standard",
          "capacity": 1
        },
        "sslPolicy": {
          "disabledSslProtocols": [
            "TLSv1_0", "TLSv1_1"
          ]
        },
        "gatewayIPConfigurations": [
          {
            "name": "gtw-ip-config",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), 'Public')]"
              }
            }
          }
        ],
        "sslCertificates": [
          {
            "name": "star-karbonhq-com",
            "properties": {
              "data": "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",
              "password": "testpassword"
            }
          }
        ],
        "authenticationCertificates": [],
        "frontendIPConfigurations": [
          {
            "name": "gtw-frontend-ip",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGatewayIPName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "gtw-frontend-port",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "gtw-karbon-be-pool",
            "properties": {
              "backendAddresses": "[parameters('karbonBEPool')]"
            }
          },
          {
            "name": "gtw-client-be-pool",
            "properties": {
              "backendAddresses": "[parameters('clientBEPool')]"
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "gtw-client-be-http-settings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "probeEnabled": true,
              "requestTimeout": 20,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', variables('appGatewayName'), 'gtw-probe-site-client')]"
              }
            }
          },
          {
            "name": "gtw-karbon-be-http-settings",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "probeEnabled": true,
              "requestTimeout": 20,
              "probe": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/probes', variables('appGatewayName'), 'gtw-probe-site-karbon')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "gtw-client-http-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), 'gtw-frontend-ip')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), 'gtw-frontend-port')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('appGatewayName'), 'star-karbonhq-com')]"
              },
              "hostName": "[variables('clientAppHostName')]",
              "requireServerNameIndication": true
            }
          },
          {
            "name": "gtw-karbon-http-listener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', variables('appGatewayName'), 'gtw-frontend-ip')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', variables('appGatewayName'), 'gtw-frontend-port')]"
              },
              "protocol": "Https",
              "sslCertificate": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/sslCertificates', variables('appGatewayName'), 'star-karbonhq-com')]"
              },
              "hostName": "[parameters('urlHostName')]",
              "requireServerNameIndication": true
            }
          }
        ],

        "requestRoutingRules": [
          {
            "name": "gtw-client-rules",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGatewayName'), 'gtw-client-http-listener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), 'gtw-client-be-pool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), 'gtw-client-be-http-settings')]"
              }
            }
          },
          {
            "name": "dev-karbon-multi-rules",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', variables('appGatewayName'), 'gtw-karbon-http-listener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', variables('appGatewayName'), 'gtw-karbon-be-pool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', variables('appGatewayName'), 'gtw-karbon-be-http-settings')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "gtw-probe-site-client",
            "properties": {
              "protocol": "Http",
              "host": "[variables('clientAppHostName')]",
              "path": "/index.html",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": false,
              "minServers": 0,
              "match": {}
            }
          },
          {
            "name": "gtw-probe-site-karbon",
            "properties": {
              "protocol": "Http",
              "host": "[parameters('urlHostName')]",
              "path": "/index.html",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": false,
              "minServers": 0,
              "match": {}
            }
          }
        ],
        "redirectConfigurations": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('appGatewayIpName'))]"
      ]
    }
  ],
  "outputs": {}
}