{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "datacenterName": {
      "defaultValue": null,
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "metadata": {
        "description": "The 3-char datacenter string that prefixes the resource group."
      }
    },
    "karbonVMType": {
      "defaultValue": null,
      "type": "string"
    },
    "karbonVMCount": {
      "defaultValue": null,
      "type": "int",
      "maxValue": 10,
      "metadata": {
        "description": "How many Karbon VMs to provision. Only matters if the script sets a karbonStartIndex, default comes from env params"
      }
    },
    "karbonStartIndex": {
      "defaultValue": 0,
      "type": "int",
      "metadata": {
        "description": "This must only be set by the calling script, as it contains the logic of looking at existing VMs"
      }
    }
  },
  "variables": {
    "karbonIpNamePrefix": "[concat(parameters('datacenterName'), '-karbon-ip-vm')]",
    "karbonNicNamePrefix": "[concat(parameters('datacenterName'), '-karbon-nic-vm')]",
    "karbonVmNamePrefix": "[concat(parameters('datacenterName'), 'karbonvm')]"
  },
  "resources": [
    {
      "comments": "Shared resources include the VNet, Network Security Groups, and Availability Sets",
      "apiVersion": "2017-05-10",
      "name": "sharedResources",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'sharedresources.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "datacenterName": {
            "value": "[parameters('datacenterName')]"
          }
        }
      }
    },
    {
      "condition": "[greater(parameters('karbonStartIndex'), 0)]",
      "comments": "Karbon web/svc resources",
      "apiVersion": "2017-05-10",
      "name": "[concat('karbonDeployVm', copyIndex(parameters('karbonStartIndex')))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'member/karbonvm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "webNetworkSecurityGroupName": {
            "value": "[reference('sharedResources').outputs.webNetworkSecurityGroupName.value]"
          },
          "virtualNetworkName": {
            "value": "[reference('sharedResources').outputs.virtualNetworkName.value]"
          },
          "karbonNicName": {
            "value": "[concat(variables('karbonNicNamePrefix'), copyIndex(parameters('karbonStartIndex')))]"
          },
          "karbonIpName": {
            "value": "[concat(variables('karbonIpNamePrefix'), copyIndex(parameters('karbonStartIndex')))]"
          },
          "karbonVmName": {
            "value": "[concat(variables('karbonVmNamePrefix'), copyIndex(parameters('karbonStartIndex')))]"
          }
        }
      },
      "copy": {
        "name": "karbonIterator",
        "count": "[parameters('karbonVMCount')]",
        "mode": "Serial"
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/sharedResources"
      ]
    }
  ],
  "outputs": {
    "result": {
      "type": "string",
      "value": "[reference('sharedResources').outputs.result.value]"
    },
    "karbonVMCount": {
      "type": "int",
      "value": "[parameters('karbonVMCount')]"
    }
  }
}