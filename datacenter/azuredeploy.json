{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "datacenterName": {
      "defaultValue": null,
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "metadata": {
        "description": "The 3-char datacenter string that prefixes the resource group."
      }
    },
    "karbonVMSize": {
      "defaultValue": null,
      "type": "string"
    },
    "karbonVMCount": {
      "defaultValue": null,
      "type": "int",
      "maxValue": 10,
      "metadata": {
        "description": "How many Karbon VMs to provision. Only matters if the script sets a karbonStartIndex, default comes from env params"
      }
    },
    "karbonStartIndex": {
      "defaultValue": 0,
      "type": "int",
      "metadata": {
        "description": "This must only be set by the calling script, as it contains the logic of looking at existing VMs"
      }
    },
    "clientVMSize": {
      "defaultValue": null,
      "type": "string"
    },
    "clientVMCount": {
      "defaultValue": null,
      "type": "int",
      "maxValue": 10,
      "metadata": {
        "description": "How many Client VMs to provision. Only matters if the script sets a clientStartIndex, default comes from env params"
      }
    },
    "clientStartIndex": {
      "defaultValue": 0,
      "type": "int",
      "metadata": {
        "description": "This must only be set by the calling script, as it contains the logic of looking at existing VMs"
      }
    },
    "adminPassword": {
      "defaultValue": null,
      "type": "securestring"
    }
  },
  "variables": {
    "karbonPrefix": "[concat(parameters('datacenterName'), '-karbon-vm')]",
    "karbonVmNamePrefix": "[concat(parameters('datacenterName'), 'karbonvm')]",
    "clientPrefix": "[concat(parameters('datacenterName'), '-client-vm')]",
    "clientVmNamePrefix": "[concat(parameters('datacenterName'), 'clientvm')]"
  },
  "resources": [
    {
      "comments": "Shared resources include the VNet, Network Security Groups, and Availability Sets",
      "apiVersion": "2017-05-10",
      "name": "sharedResources",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'sharedresources.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "datacenterName": {
            "value": "[parameters('datacenterName')]"
          }
        }
      }
    },
    {
      "condition": "[greater(parameters('karbonStartIndex'), 0)]",
      "comments": "Karbon web/svc resources",
      "apiVersion": "2017-05-10",
      "name": "[concat('karbonDeployVm', copyIndex(parameters('karbonStartIndex')))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'member/karbonvm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "webNetworkSecurityGroupName": {
            "value": "[reference('sharedResources').outputs.webNetworkSecurityGroupName.value]"
          },
          "virtualNetworkName": {
            "value": "[reference('sharedResources').outputs.virtualNetworkName.value]"
          },
          "diagnosticStorageAccountName": {
            "value": "[reference('sharedResources').outputs.diagnosticStorageAccountName.value]"
          },
          "karbonNicName": {
            "value": "[concat(variables('karbonPrefix'), copyIndex(parameters('karbonStartIndex')), '-nic1')]"
          },
          "karbonIpName": {
            "value": "[concat(variables('karbonPrefix'), copyIndex(parameters('karbonStartIndex')), '-pip1')]"
          },
          "karbonVmName": {
            "value": "[concat(variables('karbonVmNamePrefix'), copyIndex(parameters('karbonStartIndex')))]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "karbonVMSize": {
            "value": "[parameters('karbonVMSize')]"
          },
          "karbonAvailabilitySetName": {
            "value": "[reference('sharedResources').outputs.karbonAvailabilitySetName.value]"
          }
        }
      },
      "copy": {
        "name": "karbonIterator",
        "count": "[parameters('karbonVMCount')]",
        "mode": "Serial"
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/sharedResources"
      ]
    },
    {
      "condition": "[greater(parameters('clientStartIndex'), 0)]",
      "comments": "Client web/svc resources",
      "apiVersion": "2017-05-10",
      "name": "[concat('clientDeployVm', copyIndex(parameters('clientStartIndex')))]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[uri(deployment().properties.templateLink.uri, 'member/clientvm.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "webNetworkSecurityGroupName": {
            "value": "[reference('sharedResources').outputs.webNetworkSecurityGroupName.value]"
          },
          "virtualNetworkName": {
            "value": "[reference('sharedResources').outputs.virtualNetworkName.value]"
          },
          "diagnosticStorageAccountName": {
            "value": "[reference('sharedResources').outputs.diagnosticStorageAccountName.value]"
          },
          "clientNicName": {
            "value": "[concat(variables('clientPrefix'), copyIndex(parameters('clientStartIndex')), '-nic1')]"
          },
          "clientIpName": {
            "value": "[concat(variables('clientPrefix'), copyIndex(parameters('clientStartIndex')), '-pip1')]"
          },
          "clientVmName": {
            "value": "[concat(variables('clientVmNamePrefix'), copyIndex(parameters('clientStartIndex')))]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "clientVMSize": {
            "value": "[parameters('clientVMSize')]"
          },
          "clientAvailabilitySetName": {
            "value": "[reference('sharedResources').outputs.clientAvailabilitySetName.value]"
          }
        }
      },
      "copy": {
        "name": "clientIterator",
        "count": "[parameters('clientVMCount')]",
        "mode": "Serial"
      },
      "dependsOn": [
        "Microsoft.Resources/deployments/sharedResources"
      ]
    }
  ],
  "outputs": {
    "diagnosticStorageAccountName": {
      "type": "string",
      "value": "[reference('sharedResources').outputs.diagnosticStorageAccountName.value]"
    }
  }
}